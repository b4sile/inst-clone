{"version":3,"sources":["helpers/parseAvatarUrl.ts","services/firebase.ts","redux/slices/userSlice.ts","constants/routes.ts","hooks/index.ts","redux/slices/suggestionsSlice.ts","redux/slices/profileSlice.ts","redux/slices/timelineSlice.ts","redux/slices/postSlice.ts","App.module.scss","redux/thunks/index.ts","pages/loading/index.tsx","App.tsx","hooks/useAuthListener.ts","redux/index.ts","index.tsx","context/firebase.ts"],"names":["parseAvatarUrl","url","split","shift","pop","doesUsernameExist","username","a","firebase","firestore","collection","where","get","result","docs","find","user","exists","searchUsers","value","orderBy","startAt","endAt","map","doc","data","docId","id","updateUserAvatar","avatarUrl","update","uploadPhoto","file","storageRef","child","Date","now","name","put","snapshot","metadata","fullPath","getDownloadURL","uploadPost","postData","add","newPost","deletePost","delete","deletePhoto","prevUrl","getUserById","userId","reduce","obj","getUserByUsername","length","getPostById","post","getSuggestions","count","following","limit","item","updateUserFollowing","profileId","method","FieldValue","arrayUnion","arrayRemove","updateUserFollowers","followers","getPhotosForTimeline","photosResponse","photos","Promise","all","photo","users","ind","isLiked","likes","includes","updatePostLikes","updatePostComments","comments","getProfilePosts","profileUserId","posts","createSlice","initialState","isLoading","followingIds","reducers","setUser","state","payload","setIsLoading","extraReducers","builder","addCase","fetchUserById","pending","fulfilled","rejected","action","console","log","error","fetchUpdateFollowing","meta","push","arg","filter","fetchUpdateUserAvatar","undefined","actions","reducer","selectUserUsername","selectUserAvatar","selectUserFullName","fullName","selectUserId","selectUserDocId","selectIsLoading","selectIsUserFollowed","selectIsUserFollowing","ROUTES","VALUES","useAppDispatch","useDispatch","useAppSelector","useSelector","items","setItems","fetchSuggestions","profile","prof","followId","selectIsUserHaveEmptySuggestions","suggestions","selectSuggestions","fetchProfile","Object","values","fetchUpdatePostComments","comment","fetchUpdatePostLikes","fetchDeleteUserPost","selectProfileUser","selectProfilePosts","selectCountProfilePosts","fetchTimelinePosts","selectTimelineItems","timeline","fetchPostById","selectPostById","module","exports","createAsyncThunk","getState","userDocId","profileDocId","variant","newUrl","fetchAddUserPost","postPhotoUrl","imageSrc","newPostId","fetchSearchUsers","Loading","style","position","top","left","width","height","display","justifyContent","alignItems","Login","React","lazy","SignUp","NotFound","Dashboard","App","dispatch","useContext","FirebaseContext","useEffect","listener","auth","onAuthStateChanged","authUser","uid","message","useAuthListener","className","s","container","fallback","path","LOGIN","exact","SIGN_UP","DASHBOARD","PROFILE","EXPLORE_SUGGESTIONS","POST","CREATE","combinedReducer","combineReducers","userReducer","suggestionsReducer","timelineReducer","profileReducer","postReducer","store","configureStore","type","ReactDOM","render","StrictMode","Provider","document","getElementById","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","ref","createContext"],"mappings":"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","file":"static/js/main.3049a462.chunk.js","sourcesContent":["export const parseAvatarUrl = (url: string) =>\n  url.split('?').shift()?.split('%2F').pop();\n","import { CommentInterface } from './../redux/slices/timelineSlice';\nimport { firebase, FieldValue, storageRef } from '../context/firebase';\nimport { UserDataInterface } from '../redux/slices/userSlice';\nimport { PhotoInterface, PostInterface } from '../redux/slices/timelineSlice';\nimport { parseAvatarUrl } from '../helpers/parseAvatarUrl';\n\nexport const doesUsernameExist = async (username: string) => {\n  const result = await firebase\n    .firestore()\n    .collection('users')\n    .where('username', '==', username)\n    .get();\n  return result.docs.find((user) => user.exists) ? true : false;\n};\n\nexport const searchUsers = async (value: string) => {\n  const result = await firebase\n    .firestore()\n    .collection('users')\n    .orderBy('username')\n    .startAt(value)\n    .endAt(`${value}\\uf8ff`)\n    .get();\n  return result.docs.map((doc) => ({\n    ...doc.data(),\n    docId: doc.id,\n  })) as UserDataInterface[];\n};\n\nexport const updateUserAvatar = async (docId: string, avatarUrl: string) => {\n  return firebase\n    .firestore()\n    .collection('users')\n    .doc(docId)\n    .update({ avatarUrl });\n};\n\nexport const uploadPhoto = async (file: File, username: string) => {\n  const snapshot = await storageRef\n    .child(`${username}/${Date.now()}.${file.name.split('.').pop()}`)\n    .put(file);\n  const url = await storageRef\n    .child(`${snapshot.metadata.fullPath}`)\n    .getDownloadURL();\n  return url as string;\n};\n\nexport const uploadPost = async (\n  postData: Omit<PhotoInterface, 'isLiked' | 'docId'>\n) => {\n  const newPost = await firebase.firestore().collection('photos').add(postData);\n  return newPost.id;\n};\n\nexport const deletePost = async (docId: string) => {\n  return firebase.firestore().collection('photos').doc(docId).delete();\n};\n\nexport const deletePhoto = async (prevUrl: string | null, username: string) => {\n  if (!prevUrl) return;\n  const url = parseAvatarUrl(prevUrl);\n  if (url) await storageRef.child(`${username}/${url}`).delete();\n};\n\nexport const getUserById = async (\n  userId: string\n): Promise<UserDataInterface> => {\n  const user = await firebase\n    .firestore()\n    .collection('users')\n    .where('userId', '==', userId)\n    .get();\n  return user.docs.reduce(\n    (obj, doc) => (obj = { ...doc.data(), docId: doc.id }),\n    {}\n  ) as UserDataInterface;\n};\n\nexport const getUserByUsername = async (\n  username: string\n): Promise<UserDataInterface | null> => {\n  const user = await firebase\n    .firestore()\n    .collection('users')\n    .where('username', '==', username)\n    .get();\n  return user.docs.length > 0\n    ? (user.docs.reduce(\n        (obj, doc) => (obj = { ...doc.data(), docId: doc.id }),\n        {}\n      ) as UserDataInterface)\n    : null;\n};\n\nexport const getPostById = async (\n  docId: string\n): Promise<PhotoInterface | null> => {\n  const post = await firebase.firestore().collection('photos').doc(docId).get();\n  if (post.exists) return { ...post.data(), docId: post.id } as PhotoInterface;\n  return null;\n};\n\nexport const getSuggestions = async (\n  userId: string,\n  count: number,\n  following: string[]\n): Promise<UserDataInterface[]> => {\n  const result = await firebase\n    .firestore()\n    .collection('users')\n    .where('userId', 'not-in', [...following, userId])\n    .limit(count)\n    .get();\n  return result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  })) as UserDataInterface[];\n};\n\nexport const updateUserFollowing = async (\n  docId: string,\n  profileId: string,\n  method: 'add' | 'remove'\n) => {\n  return firebase\n    .firestore()\n    .collection('users')\n    .doc(docId)\n    .update({\n      following:\n        method === 'add'\n          ? FieldValue.arrayUnion(profileId)\n          : FieldValue.arrayRemove(profileId),\n    });\n};\n\nexport const updateUserFollowers = async (\n  docId: string,\n  profileId: string,\n  method: 'add' | 'remove'\n) => {\n  return firebase\n    .firestore()\n    .collection('users')\n    .doc(docId)\n    .update({\n      followers:\n        method === 'add'\n          ? FieldValue.arrayUnion(profileId)\n          : FieldValue.arrayRemove(profileId),\n    });\n};\n\nexport const getPhotosForTimeline = async (\n  following: string[],\n  userId: string\n): Promise<PostInterface[]> => {\n  const photosResponse = await firebase\n    .firestore()\n    .collection('photos')\n    .where('userId', 'in', following)\n    .orderBy('dateCreated', 'desc')\n    .limit(3)\n    .get();\n\n  const photos = photosResponse.docs.map(\n    (doc) => ({ ...doc.data(), docId: doc.id } as PhotoInterface)\n  );\n\n  const users = await Promise.all(\n    photos.map((photo) => getUserById(photo.userId))\n  );\n\n  return users.map((user, ind) => ({\n    user,\n    ...photos[ind],\n    isLiked: photos[ind].likes.includes(userId),\n  }));\n};\n\nexport const updatePostLikes = async (\n  docId: string,\n  userId: string,\n  method: 'add' | 'remove'\n) => {\n  return firebase\n    .firestore()\n    .collection('photos')\n    .doc(docId)\n    .update({\n      likes:\n        method === 'add'\n          ? FieldValue.arrayUnion(userId)\n          : FieldValue.arrayRemove(userId),\n    });\n};\n\nexport const updatePostComments = async (\n  docId: string,\n  comments: CommentInterface[]\n) => {\n  return firebase.firestore().collection('photos').doc(docId).update({\n    comments,\n  });\n};\n\nexport const getProfilePosts = async (\n  profileUserId: string,\n  userId: string | null\n): Promise<PhotoInterface[]> => {\n  const posts = await firebase\n    .firestore()\n    .collection('photos')\n    .where('userId', '==', profileUserId)\n    .orderBy('dateCreated', 'desc')\n    .get();\n\n  return posts.docs.map((doc) => ({\n    ...doc.data(),\n    docId: doc.id,\n    isLiked: userId ? doc.data().likes.includes(userId) : false,\n  })) as PhotoInterface[];\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '..';\nimport {\n  fetchUpdateFollowing,\n  fetchUpdateUserAvatar,\n  fetchUserById,\n} from '../thunks';\n\nexport interface UserDataInterface {\n  docId: string;\n  fullName: string;\n  username: string;\n  userId: string;\n  emailAddress: string;\n  followers: string[];\n  following: string[];\n  dateCreated: number;\n  avatarUrl?: string;\n}\ninterface UserState {\n  user: UserDataInterface | null;\n  isLoading: boolean;\n  followingIds: string[];\n}\n\nconst initialState: UserState = {\n  user: null,\n  isLoading: true,\n  followingIds: [],\n};\n\nconst { actions, reducer } = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser: (state, { payload }: PayloadAction<UserDataInterface | null>) => {\n      state.user = payload;\n    },\n    setIsLoading: (state, { payload }: PayloadAction<boolean>) => {\n      state.isLoading = payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchUserById.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchUserById.fulfilled, (state, { payload }) => {\n      state.user = payload;\n      state.isLoading = false;\n    });\n    builder.addCase(fetchUserById.rejected, (state, action) => {\n      state.isLoading = false;\n      console.log(action.error);\n    });\n    builder.addCase(fetchUpdateFollowing.pending, (state, { meta }) => {\n      state.followingIds.push(meta.arg.profileId);\n    });\n    builder.addCase(fetchUpdateFollowing.fulfilled, (state, { meta }) => {\n      const {\n        arg: { profileId, method },\n      } = meta;\n      if (method === 'add') {\n        state.user?.following.push(profileId);\n      } else {\n        if (state.user) {\n          state.user.following = state.user?.following.filter(\n            (id) => id !== profileId\n          );\n        }\n      }\n      state.followingIds = state.followingIds.filter((id) => id !== profileId);\n    });\n    builder.addCase(fetchUpdateFollowing.rejected, (state, { error, meta }) => {\n      state.followingIds = state.followingIds.filter(\n        (id) => id !== meta.arg.profileId\n      );\n      console.log(error);\n    });\n    builder.addCase(fetchUpdateUserAvatar.fulfilled, (state, { payload }) => {\n      if (state.user) state.user.avatarUrl = payload || undefined;\n    });\n  },\n});\n\nexport const selectUserUsername = ({ user: { user } }: RootState) =>\n  user && user.username;\nexport const selectUserAvatar = ({ user: { user } }: RootState) =>\n  user && user.avatarUrl;\nexport const selectUserFullName = ({ user: { user } }: RootState) =>\n  user && user.fullName;\nexport const selectUserFollowing = ({ user: { user } }: RootState) =>\n  user && user.following;\nexport const selectUserId = ({ user: { user } }: RootState) =>\n  user && user.userId;\nexport const selectUserDocId = ({ user: { user } }: RootState) =>\n  user && user.docId;\nexport const selectUser = ({ user }: RootState) => user.user;\nexport const selectIsLoading = ({ user }: RootState) => user.isLoading;\nexport const selectIsUserFollowed =\n  (profileId: string) =>\n  ({ user: { user } }: RootState) =>\n    (user && user.following.includes(profileId)) || false;\nexport const selectIsUserFollowing =\n  (profileId: string | undefined) =>\n  ({ user: { followingIds } }: RootState) =>\n    (profileId && followingIds.includes(profileId)) || false;\n\nexport const { setUser, setIsLoading } = actions;\n\nexport default reducer;\n","export enum ROUTES {\n  DASHBOARD = '/',\n  LOGIN = '/login',\n  SIGN_UP = '/signup',\n  PROFILE = '/:username',\n  NOT_FOUND = '/not-found',\n  POST = '/p/:id',\n  EXPLORE_SUGGESTIONS = '/explore/suggestions',\n  CREATE = '/create',\n}\n\nexport enum VALUES {\n  LOGO = 'https://res.cloudinary.com/dso6gkkxp/image/upload/v1622108631/logo_zgpwei.svg',\n  AVATAR = 'https://res.cloudinary.com/dso6gkkxp/image/upload/v1622124933/default_uuoru5.png',\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../redux';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '..';\nimport { fetchSuggestions, fetchUpdateFollowing } from '../thunks';\nimport { UserDataInterface } from './userSlice';\n\ninterface SuggestionsState {\n  items: UserDataInterface[];\n  isLoading: boolean;\n}\n\nconst initialState: SuggestionsState = {\n  items: [],\n  isLoading: false,\n};\n\nconst { actions, reducer } = createSlice({\n  name: 'suggestions',\n  initialState,\n  reducers: {\n    setItems: (state, { payload }: PayloadAction<UserDataInterface[]>) => {\n      state.items = payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchSuggestions.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchSuggestions.fulfilled, (state, { payload }) => {\n      state.items = payload;\n      state.isLoading = false;\n    });\n    builder.addCase(fetchSuggestions.rejected, (state, action) => {\n      state.isLoading = false;\n      console.log(action.error);\n    });\n    builder.addCase(fetchUpdateFollowing.fulfilled, (state, { meta }) => {\n      const method = meta.arg.method;\n      const profileId = meta.arg.profileId;\n      const userId = meta.arg.userId;\n\n      const profile = state.items.find((prof) => prof.userId === profileId);\n\n      if (profile) {\n        if (method === 'add') profile.followers.push(userId);\n        else {\n          profile.followers = profile.followers.filter(\n            (followId) => followId !== userId\n          );\n        }\n      }\n    });\n  },\n});\n\nexport const { setItems } = actions;\n\nexport const selectIsUserHaveEmptySuggestions = ({\n  suggestions: { items },\n}: RootState) => items.length === 0;\nexport const selectSuggestions = ({ suggestions: { items } }: RootState) =>\n  items;\nexport const selectIsLoading = ({ suggestions: { isLoading } }: RootState) =>\n  isLoading;\n\nexport default reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '..';\nimport {\n  fetchDeleteUserPost,\n  fetchProfile,\n  fetchUpdateFollowing,\n  fetchUpdatePostComments,\n  fetchUpdatePostLikes,\n  fetchUpdateUserAvatar,\n} from '../thunks';\nimport { PhotoInterface } from './timelineSlice';\nimport { UserDataInterface } from './userSlice';\n\nexport type ProfileItemValueInterface = {\n  user: UserDataInterface;\n  posts: PhotoInterface[];\n};\n\nexport type ProfileItemInterface = {\n  [key: string]: ProfileItemValueInterface | undefined;\n};\n\ninterface ProfileState {\n  items: ProfileItemInterface;\n  isLoading: boolean;\n}\n\nconst initialState: ProfileState = {\n  items: {},\n  isLoading: false,\n};\n\nconst { actions, reducer } = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    setItems: (\n      state,\n      {\n        payload,\n      }: PayloadAction<{\n        user: UserDataInterface;\n        posts: PhotoInterface[];\n      } | null>\n    ) => {\n      if (payload) state.items[payload.user.username] = payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfile.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchProfile.fulfilled, (state, { payload }) => {\n      if (payload) {\n        state.items[payload.user.username] = payload;\n      }\n      state.isLoading = false;\n    });\n    builder.addCase(fetchProfile.rejected, (state, action) => {\n      state.isLoading = false;\n      console.log(action.error);\n    });\n    builder.addCase(fetchUpdateFollowing.fulfilled, (state, { meta }) => {\n      const {\n        arg: { profileId, method, userId },\n      } = meta;\n      const item = Object.values(state.items).find(\n        (item) => item?.user.userId === profileId\n      );\n      if (item) {\n        if (method === 'add') {\n          item.user.followers.push(userId);\n        } else {\n          item.user.followers = item.user.followers.filter(\n            (id) => id !== userId\n          );\n        }\n      }\n    });\n    builder.addCase(fetchUpdatePostComments.fulfilled, (state, { meta }) => {\n      const docId = meta.arg.docId;\n      const comment = meta.arg.comment;\n      const photo = Object.values(state.items).find((item) =>\n        item?.posts.find((post) => post.docId === docId)\n      );\n\n      if (photo) {\n        state.items[photo.user.username]?.posts\n          .find((post) => post.docId === docId)\n          ?.comments.push(comment);\n      }\n    });\n    builder.addCase(fetchUpdatePostLikes.fulfilled, (state, { meta }) => {\n      const docId = meta.arg.docId;\n      const userId = meta.arg.userId;\n      const method = meta.arg.method;\n\n      const item = Object.values(state.items).find((item) =>\n        item?.posts.find((post) => post.docId === docId)\n      );\n\n      if (item) {\n        const photo = item.posts.find((post) => post.docId === docId);\n        if (photo) {\n          photo.isLiked = !photo.isLiked;\n          if (method === 'add') photo.likes.push(userId);\n          else {\n            photo.likes = photo.likes.filter((id) => id !== userId);\n          }\n        }\n      }\n    });\n    builder.addCase(\n      fetchUpdateUserAvatar.fulfilled,\n      (state, { payload, meta }) => {\n        const docId = meta.arg.docId;\n        const item = Object.values(state.items).find(\n          (item) => item?.user.docId === docId\n        );\n        if (item) item.user.avatarUrl = payload || undefined;\n      }\n    );\n    builder.addCase(fetchDeleteUserPost.fulfilled, (state, { meta }) => {\n      const docId = meta.arg.docId;\n      const username = meta.arg.username;\n      const item = Object.values(state.items).find(\n        (item) => item?.user.username === username\n      );\n      if (item) item.posts = item.posts.filter((post) => post.docId !== docId);\n    });\n  },\n});\n\nexport const selectProfileUser =\n  (username: string) =>\n  ({ profile: { items } }: RootState) =>\n    items[username]?.user;\nexport const selectProfilePosts =\n  (username: string) =>\n  ({ profile: { items } }: RootState) =>\n    items[username]?.posts;\nexport const selectIsLoading = ({ profile }: RootState) => profile.isLoading;\nexport const selectCountProfilePosts =\n  (username: string | undefined) =>\n  ({ profile: { items } }: RootState) =>\n    (username && items[username]?.posts.length) || 0;\n\nexport const { setItems } = actions;\n\nexport default reducer;\n","import {\n  fetchTimelinePosts,\n  fetchUpdatePostComments,\n  fetchUpdatePostLikes,\n} from './../thunks/index';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '..';\nimport { UserDataInterface } from './userSlice';\n\nexport interface CommentInterface {\n  comment: string;\n  displayName: string;\n}\n\nexport interface PhotoInterface {\n  caption: string;\n  comments: CommentInterface[];\n  dateCreated: number;\n  imageSrc: string;\n  likes: string[];\n  userId: string;\n  docId: string;\n  isLiked: boolean;\n}\n\nexport interface PostInterface extends PhotoInterface {\n  user: UserDataInterface;\n}\n\ninterface TimelineState {\n  items: PostInterface[];\n  isLoading: boolean;\n}\n\nconst initialState: TimelineState = {\n  items: [],\n  isLoading: false,\n};\n\nconst { actions, reducer } = createSlice({\n  name: 'timeline',\n  initialState,\n  reducers: {\n    setItems: (state, { payload }: PayloadAction<PostInterface[]>) => {\n      state.items = payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchTimelinePosts.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchTimelinePosts.fulfilled, (state, { payload }) => {\n      state.items = payload;\n      state.isLoading = false;\n    });\n    builder.addCase(fetchTimelinePosts.rejected, (state, action) => {\n      state.isLoading = false;\n      console.log(action.error);\n    });\n    builder.addCase(fetchUpdatePostLikes.fulfilled, (state, { meta }) => {\n      const docId = meta.arg.docId;\n      const userId = meta.arg.userId;\n      const method = meta.arg.method;\n      const photo = state.items.find((item) => item.docId === docId);\n\n      if (photo) {\n        photo.isLiked = !photo.isLiked;\n        if (method === 'add') photo.likes.push(userId);\n        else {\n          photo.likes = photo.likes.filter((id) => id !== userId);\n        }\n      }\n    });\n    builder.addCase(fetchUpdatePostComments.fulfilled, (state, { meta }) => {\n      const docId = meta.arg.docId;\n      const comment = meta.arg.comment;\n      const photo = state.items.find((item) => item.docId === docId);\n\n      if (photo) {\n        photo.comments.push(comment);\n      }\n    });\n  },\n});\n\nexport const selectTimelineItems = ({ timeline: { items } }: RootState) =>\n  items;\nexport const selectIsLoading = ({ timeline: { isLoading } }: RootState) =>\n  isLoading;\nexport const selectPost =\n  (docId: string) =>\n  ({ timeline: { items } }: RootState) =>\n    items.find((item) => item.docId === docId);\n\nexport const { setItems } = actions;\n\nexport default reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '..';\nimport {\n  fetchDeleteUserPost,\n  fetchPostById,\n  fetchUpdatePostComments,\n  fetchUpdatePostLikes,\n} from '../thunks';\nimport { PostInterface } from './timelineSlice';\n\nexport type PostItemInterface = {\n  [key: string]: PostInterface | undefined;\n};\n\ninterface PostState {\n  items: PostItemInterface;\n  isLoading: boolean;\n}\n\nconst initialState: PostState = {\n  items: {},\n  isLoading: false,\n};\n\nconst { reducer } = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPostById.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchPostById.fulfilled, (state, { payload }) => {\n      if (payload)\n        state.items[payload.post.docId] = {\n          ...payload.post,\n          user: payload.user,\n        };\n      state.isLoading = false;\n    });\n    builder.addCase(fetchPostById.rejected, (state, action) => {\n      state.isLoading = false;\n      console.log(action.error);\n    });\n    builder.addCase(fetchUpdatePostLikes.fulfilled, (state, { meta }) => {\n      const docId = meta.arg.docId;\n      const userId = meta.arg.userId;\n      const method = meta.arg.method;\n      const photo = Object.values(state.items).find(\n        (item) => item?.docId === docId\n      );\n      if (photo) {\n        photo.isLiked = !photo.isLiked;\n        if (method === 'add') photo.likes.push(userId);\n        else {\n          photo.likes = photo.likes.filter((id) => id !== userId);\n        }\n      }\n    });\n    builder.addCase(fetchUpdatePostComments.fulfilled, (state, { meta }) => {\n      const docId = meta.arg.docId;\n      const comment = meta.arg.comment;\n      const photo = Object.values(state.items).find(\n        (item) => item && item.docId === docId\n      );\n\n      if (photo) {\n        photo.comments.push(comment);\n      }\n    });\n    builder.addCase(fetchDeleteUserPost.fulfilled, (state, { meta }) => {\n      const docId = meta.arg.docId;\n      delete state.items[docId];\n    });\n  },\n});\n\nexport const selectPostById =\n  (id: string) =>\n  ({ post: { items } }: RootState) =>\n    items[id];\nexport const selectIsLoading = ({ post }: RootState) => post.isLoading;\n\nexport default reducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\"};","import { ProfileItemValueInterface } from './../slices/profileSlice';\nimport {\n  getPhotosForTimeline,\n  updateUserFollowers,\n  updateUserFollowing,\n  updatePostLikes,\n  updatePostComments,\n  getUserByUsername,\n  getProfilePosts,\n  getPostById,\n  updateUserAvatar,\n  uploadPhoto,\n  deletePhoto,\n  uploadPost,\n  deletePost,\n  searchUsers,\n} from './../../services/firebase';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getSuggestions, getUserById } from '../../services/firebase';\nimport { UserDataInterface } from '../slices/userSlice';\nimport { RootState } from '..';\nimport {\n  CommentInterface,\n  PhotoInterface,\n  PostInterface,\n} from '../slices/timelineSlice';\n\nexport const fetchUserById = createAsyncThunk(\n  'user/fetchById',\n  async (userId: string) => {\n    return await getUserById(userId);\n  }\n);\n\nexport const fetchPostById = createAsyncThunk<\n  { post: PhotoInterface; user: UserDataInterface } | null,\n  string,\n  { state: RootState }\n>('post/fetchById', async (docId, { getState }) => {\n  const post = await getPostById(docId);\n  if (!post) return null;\n  const userId = getState().user.user?.userId;\n  post.isLiked = (userId && post.likes.includes(userId)) || false;\n  const user = await getUserById(post.userId);\n  return { post, user };\n});\n\nexport type FetchSuggestionsParams = {\n  userId: string;\n  count: number;\n};\n\nexport const fetchSuggestions = createAsyncThunk<\n  UserDataInterface[],\n  FetchSuggestionsParams,\n  { state: RootState }\n>('suggestions/fetch', async ({ count, userId }, { getState }) => {\n  const following = getState().user.user!.following;\n  return await getSuggestions(userId, count, following);\n});\n\nexport type FetchUpdateFollowing = {\n  profileDocId: string;\n  profileId: string;\n  userDocId: string;\n  userId: string;\n  method: 'add' | 'remove';\n};\n\nexport const fetchUpdateFollowing = createAsyncThunk(\n  'user/updateFollowing',\n  async ({\n    userDocId,\n    profileId,\n    profileDocId,\n    method,\n    userId,\n  }: FetchUpdateFollowing) => {\n    await Promise.all([\n      updateUserFollowing(userDocId, profileId, method),\n      updateUserFollowers(profileDocId, userId, method),\n    ]);\n  }\n);\n\nexport const fetchTimelinePosts = createAsyncThunk<\n  PostInterface[],\n  string,\n  { state: RootState }\n>('timeline/fetchPosts', async (userId, { getState }) => {\n  const following = getState().user.user?.following;\n\n  if (!following || !following.length) return [];\n  return await getPhotosForTimeline(following, userId);\n});\n\nexport type FetchUpdatePostLikes = {\n  method: 'add' | 'remove';\n  docId: string;\n  userId: string;\n};\n\nexport const fetchUpdatePostLikes = createAsyncThunk<\n  void,\n  FetchUpdatePostLikes,\n  { state: RootState }\n>('timeline/updatePostLikes', async ({ docId, userId, method }) => {\n  return await updatePostLikes(docId, userId, method);\n});\n\nexport type FetchUpdatePostComments = {\n  comment: CommentInterface;\n  docId: string;\n  variant: 'timeline' | 'fullpost';\n};\n\nexport const fetchUpdatePostComments = createAsyncThunk<\n  void,\n  FetchUpdatePostComments,\n  { state: RootState }\n>(\n  'timeline/updatePostComments',\n  async ({ docId, comment, variant }, { getState }) => {\n    let post: PostInterface | undefined;\n    if (variant === 'timeline')\n      post = getState().timeline.items.find((item) => item.docId === docId);\n    else\n      post = Object.values(getState().post.items).find(\n        (item) => item && item.docId === docId\n      );\n    if (post)\n      return await updatePostComments(docId, [...post.comments, comment]);\n  }\n);\n\nexport const fetchProfile = createAsyncThunk<\n  ProfileItemValueInterface | null,\n  string,\n  { state: RootState }\n>('profile/fetch', async (username, { getState }) => {\n  const userId = getState().user.user?.userId || null;\n  const user = await getUserByUsername(username);\n  if (!user) return null;\n  const posts = await getProfilePosts(user.userId, userId);\n  return { user, posts };\n});\n\ntype fetchUpdateUserAvatarParams = {\n  file: File;\n  username: string;\n  docId: string;\n  url: string | null;\n};\n\nexport const fetchUpdateUserAvatar = createAsyncThunk(\n  'user/updateUserAvatar',\n  async ({ file, username, docId, url }: fetchUpdateUserAvatarParams) => {\n    const newUrl = await uploadPhoto(file, username);\n    if (newUrl)\n      await Promise.all([\n        updateUserAvatar(docId, newUrl),\n        deletePhoto(url, username),\n      ]);\n    return newUrl;\n  }\n);\n\ntype fetchAddUserPostParams = {\n  postData: Omit<PhotoInterface, 'isLiked' | 'docId' | 'imageSrc'>;\n  file: File;\n  username: string;\n};\n\nexport const fetchAddUserPost = createAsyncThunk(\n  'post/addUserPost',\n  async ({ postData, file, username }: fetchAddUserPostParams) => {\n    const postPhotoUrl = await uploadPhoto(file, username);\n    const newPostId = await uploadPost({ ...postData, imageSrc: postPhotoUrl });\n    return newPostId;\n  }\n);\n\ntype fetchDeleteUserPostParams = {\n  username: string;\n  docId: string;\n  url: string;\n};\n\nexport const fetchDeleteUserPost = createAsyncThunk(\n  'post/deleteUserPost',\n  async ({ username, url, docId }: fetchDeleteUserPostParams) => {\n    await Promise.all([deletePhoto(url, username), deletePost(docId)]);\n  }\n);\n\nexport const fetchSearchUsers = createAsyncThunk(\n  'user/searchUsers',\n  async (value: string) => {\n    return await searchUsers(value);\n  }\n);\n","import { AiOutlineInstagram } from 'react-icons/ai';\nimport React from 'react';\n\nexport const Loading = () => {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: '0',\n        left: '0',\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <AiOutlineInstagram style={{ width: '40px', height: '40px' }} />\n    </div>\n  );\n};\n","import React, { Suspense } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ROUTES } from './constants/routes';\nimport s from './App.module.scss';\nimport { useAuthListener } from './hooks/useAuthListener';\nimport { Loading } from './pages/loading';\n\nconst Login = React.lazy(() => import('./pages/login'));\nconst SignUp = React.lazy(() => import('./pages/signup'));\nconst NotFound = React.lazy(() => import('./pages/notFound'));\nconst Dashboard = React.lazy(() => import('./pages/dashboard'));\n\nfunction App() {\n  const isLoading = useAuthListener();\n\n  return (\n    <div className={s.container}>\n      <Router>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path={`${ROUTES.LOGIN}`} exact>\n              <Login />\n            </Route>\n            <Route path={`${ROUTES.SIGN_UP}`} exact>\n              <SignUp />\n            </Route>\n            <Route\n              exact\n              path={[\n                `${ROUTES.DASHBOARD}`,\n                `${ROUTES.PROFILE}`,\n                `${ROUTES.EXPLORE_SUGGESTIONS}`,\n                `${ROUTES.POST}`,\n                `${ROUTES.CREATE}`,\n              ]}\n            >\n              {isLoading ? <Loading /> : <Dashboard />}\n            </Route>\n            <Route>{isLoading ? <Loading /> : <NotFound />}</Route>\n          </Switch>\n        </Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { selectIsLoading, setIsLoading } from './../redux/slices/userSlice';\nimport React from 'react';\nimport { FirebaseContext } from '../context/firebase';\nimport { useAppDispatch, useAppSelector } from '.';\nimport { setUser } from '../redux/slices/userSlice';\nimport { fetchUserById } from '../redux/thunks';\n\nexport const useAuthListener = () => {\n  const dispatch = useAppDispatch();\n  const { firebase } = React.useContext(FirebaseContext);\n  const isLoading = useAppSelector(selectIsLoading);\n\n  React.useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged(\n      (authUser) => {\n        if (authUser) {\n          dispatch(fetchUserById(authUser.uid));\n        } else {\n          dispatch(setUser(null));\n          dispatch(setIsLoading(false));\n        }\n      },\n      (error) => {\n        console.log(error.message);\n        dispatch(setUser(null));\n        dispatch(setIsLoading(false));\n      }\n    );\n    return () => listener();\n  }, [firebase, dispatch]);\n\n  return isLoading;\n};\n","import {\n  Action,\n  AnyAction,\n  combineReducers,\n  configureStore,\n  Reducer,\n  ThunkAction,\n} from '@reduxjs/toolkit';\nimport userReducer from './slices/userSlice';\nimport suggestionsReducer from './slices/suggestionsSlice';\nimport timelineReducer from './slices/timelineSlice';\nimport profileReducer from './slices/profileSlice';\nimport postReducer from './slices/postSlice';\n\nconst combinedReducer = combineReducers({\n  user: userReducer,\n  suggestions: suggestionsReducer,\n  timeline: timelineReducer,\n  profile: profileReducer,\n  post: postReducer,\n});\n\nconst rootReducer: Reducer = (state: RootState, action: AnyAction) => {\n  if (action.type === 'user/logout') {\n    state = {} as RootState;\n  }\n  return combinedReducer(state, action);\n};\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof combinedReducer>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\nimport { FirebaseContext, FieldValue, firebase } from './context/firebase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <FirebaseContext.Provider value={{ firebase, FieldValue }}>\n        <App />\n      </FirebaseContext.Provider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { createContext } from 'react';\nimport Firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: 'AIzaSyCHSdDmDdqClqpU_Y9GogMQP-o-ukVZ-xA',\n  authDomain: 'instagram-bf61f.firebaseapp.com',\n  projectId: 'instagram-bf61f',\n  storageBucket: 'instagram-bf61f.appspot.com',\n  messagingSenderId: '323621794662',\n  appId: '1:323621794662:web:7f59962b20d1e1a219cea7',\n};\n\nexport const firebase = Firebase.initializeApp(config);\nexport const { FieldValue } = Firebase.firestore;\nexport const storageRef = Firebase.storage().ref();\n\nexport class FirebaseAuthError implements Firebase.auth.Error {\n  constructor(readonly code: string, readonly message: string) {}\n}\nexport interface FirebaseContextInterface {\n  firebase: Firebase.app.App;\n  FieldValue: typeof FieldValue;\n}\n\nexport const FirebaseContext = createContext<FirebaseContextInterface>(\n  {} as FirebaseContextInterface\n);\n"],"sourceRoot":""}