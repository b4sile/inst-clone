{"version":3,"sources":["components/create/style.module.scss","components/exploreSuggestions/style.module.scss","components/home/style.module.scss","pages/dashboard/style.module.scss","components/create/index.tsx","hooks/useUploadPhoto.ts","components/exploreSuggestions/index.tsx","components/home/index.tsx","components/post/PostWrapper.tsx","hooks/usePost.ts","components/post/PostModal.tsx","components/privateRoute/index.tsx","pages/dashboard/index.tsx"],"names":["module","exports","Create","state","useLocation","React","useState","preview","setPreview","message","setMessage","isLoading","setIsLoading","userId","useAppSelector","selectUserId","username","selectUserUsername","dispatch","useAppDispatch","history","useHistory","isSmallScreen","useMediaQuery","query","handleAddPost","e","a","preventDefault","postData","comments","dateCreated","Date","now","likes","caption","fetchAddUserPost","file","response","meta","requestStatus","push","payload","useEffect","objectUrl","URL","createObjectURL","revokeObjectURL","onKeyDown","key","useUploadPhoto","className","s","title","cn","bigscreen","src","alt","container","onSubmit","value","onChange","target","placeholder","textarea","btn","variant","type","disabled","to","ExploreSuggestions","header","wrapper","count","Home","left","right","PostWrapper","isModalPost","id","useParams","post","selectPostById","selectIsLoading","fetchPostById","usePost","isFullPost","PostModal","modalIsOpen","setIsOpen","isLaptop","handleCloseModal","stopPropagation","goBack","appElement","document","getElementById","isOpen","onRequestClose","style","overlay","backgroundColor","zIndex","border","display","alignItems","justifyContent","content","padding","overflow","borderRadius","maxWidth","inset","height","width","onClick","modal__close","PrivateRoute","children","rest","ROUTES","LOGIN","Dashboard","location","background","exact","path","DASHBOARD","EXPLORE_SUGGESTIONS","CREATE","PROFILE","POST"],"mappings":"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","file":"static/js/5.480702dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__UIaj5 style_container__31lY_\",\"textarea\":\"style_textarea__1dVD2 style_textarea__3AkZD\",\"btn\":\"style_btn__2Ic0L style_btn__1FeoN\",\"title\":\"style_title__1gfub\",\"bigscreen\":\"style_bigscreen__3suEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__1zVQt\",\"container\":\"style_container__sYGDH\",\"header\":\"style_header__bnUi9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3HSBs\",\"left\":\"style_left__38QNa\",\"right\":\"style_right__1JgPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__XnFyY\"};","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useUploadPhoto } from '../../hooks/useUploadPhoto';\nimport { Image } from '../image';\nimport s from './style.module.scss';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport cn from 'classnames';\nimport { Button } from '..';\n\nexport const Create = () => {\n  const {\n    preview,\n    state,\n    message,\n    setMessage,\n    isLoading,\n    handleAddPost,\n    onKeyDown,\n    isSmallScreen,\n  } = useUploadPhoto();\n\n  if (!state) return <Redirect to=\"/\" />;\n\n  return (\n    <div>\n      <h1 className={s.title}>New Post</h1>\n      {preview && (\n        <div className={cn({ [s.bigscreen]: !isSmallScreen })}>\n          <Image src={preview} alt=\"Preview\" />\n        </div>\n      )}\n      <div className={cn(s.container)}>\n        <form onSubmit={handleAddPost}>\n          <TextareaAutosize\n            value={message}\n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n              setMessage(e.target.value)\n            }\n            onKeyDown={onKeyDown}\n            placeholder=\"Add a title...\"\n            className={s.textarea}\n          />\n          <Button\n            className={s.btn}\n            variant=\"outlined\"\n            type=\"submit\"\n            disabled={message === '' || isLoading}\n            isLoading={isLoading}\n          >\n            Share\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '.';\nimport { selectUserId, selectUserUsername } from '../redux/slices/userSlice';\nimport { fetchAddUserPost } from '../redux/thunks';\n\nexport const useUploadPhoto = () => {\n  const { state } = useLocation<{ file: File } | null>();\n  const [preview, setPreview] = React.useState<string | null>(null);\n  const [message, setMessage] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(false);\n  const userId = useAppSelector(selectUserId);\n  const username = useAppSelector(selectUserUsername);\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const isSmallScreen = useMediaQuery({\n    query: '(max-width: 768px)',\n  });\n\n  const handleAddPost = async (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    if (message !== '' && userId && username && state) {\n      setIsLoading(true);\n      const postData = {\n        userId,\n        comments: [],\n        dateCreated: Date.now(),\n        likes: [],\n        caption: message,\n      };\n      const response = await dispatch(\n        fetchAddUserPost({ username, file: state.file, postData })\n      );\n      setIsLoading(false);\n      setMessage('');\n      if (response.meta.requestStatus === 'fulfilled') {\n        history.push(`/p/${response.payload as string}`);\n      }\n    }\n  };\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleAddPost(e);\n    }\n  };\n\n  React.useEffect(() => {\n    if (!state) {\n      setPreview('');\n      return;\n    }\n    const objectUrl = URL.createObjectURL(state.file);\n    setPreview(objectUrl);\n\n    return () => {\n      URL.revokeObjectURL(objectUrl);\n      setPreview(null);\n    };\n  }, [state]);\n\n  return {\n    state,\n    preview,\n    setMessage,\n    message,\n    isLoading,\n    handleAddPost,\n    onKeyDown,\n    isSmallScreen,\n  };\n};\n","import React from 'react';\nimport { Suggestions } from '../suggestions';\nimport s from './style.module.scss';\n\nexport const ExploreSuggestions = () => {\n  return (\n    <div className={s.container}>\n      <h2 className={s.header}>Suggested</h2>\n      <div className={s.wrapper}>\n        <Suggestions variant=\"middle\" count={15} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Sidebar, Timeline } from '..';\nimport s from './style.module.scss';\n\nexport const Home = () => {\n  return (\n    <div className={s.container}>\n      <Timeline className={s.left} />\n      <Sidebar className={s.right} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Post } from '.';\nimport { usePost } from '../../hooks/usePost';\nimport { PostSkeleton } from '../postSkeleton';\n\ntype PostWrapperProps = { isModalPost?: boolean };\n\nexport const PostWrapper = ({ isModalPost }: PostWrapperProps) => {\n  const { post, isLoading } = usePost();\n\n  if (isLoading && !post)\n    return <PostSkeleton isFullPost isModalPost={isModalPost} />;\n  if (!post) return <h2>This post doesn't exist.</h2>;\n\n  return <Post {...post} isFullPost isModalPost={isModalPost} />;\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '.';\nimport { selectIsLoading, selectPostById } from '../redux/slices/postSlice';\nimport { fetchPostById } from '../redux/thunks';\n\nexport const usePost = () => {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useAppDispatch();\n  const post = useAppSelector(selectPostById(id));\n  const isLoading = useAppSelector(selectIsLoading);\n\n  React.useEffect(() => {\n    if (id) {\n      dispatch(fetchPostById(id));\n    }\n  }, [dispatch, id]);\n\n  return { post, isLoading };\n};\n","import React from 'react';\nimport Modal from 'react-modal';\nimport { useHistory } from 'react-router-dom';\nimport { PostWrapper } from './PostWrapper';\nimport { GrClose } from 'react-icons/gr';\nimport s from './style.module.scss';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const PostModal = () => {\n  const [modalIsOpen, setIsOpen] = React.useState(true);\n  const isLaptop = useMediaQuery({\n    query: '(max-width: 895px)',\n  });\n  const isSmallScreen = useMediaQuery({\n    query: '(max-width: 768px)',\n  });\n\n  const history = useHistory();\n\n  const handleCloseModal = (e: React.SyntheticEvent) => {\n    e.stopPropagation();\n    setIsOpen(false);\n    history.goBack();\n  };\n\n  return (\n    <Modal\n      appElement={document.getElementById('root') as HTMLElement}\n      isOpen={modalIsOpen}\n      onRequestClose={handleCloseModal}\n      style={{\n        overlay: {\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          zIndex: 5000,\n          border: 'none',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n        content: {\n          padding: '0px',\n          overflow: 'hidden',\n          border: 'none',\n          borderRadius: '0px',\n          maxWidth: '815px',\n          inset: 'unset',\n          height: isSmallScreen ? '80%' : 'auto',\n          width: !isLaptop ? '100%' : `${(815 * 100) / 895}%`,\n        },\n      }}\n    >\n      <PostWrapper isModalPost />\n      <GrClose onClick={handleCloseModal} className={s.modal__close} />\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { ROUTES } from '../../constants/routes';\nimport { useAppSelector } from '../../hooks';\nimport { selectUserUsername } from '../../redux/slices/userSlice';\n\ninterface PrivateRouteProps extends RouteProps {}\n\nexport const PrivateRoute = ({ children, ...rest }: PrivateRouteProps) => {\n  const username = useAppSelector(selectUserUsername);\n\n  if (username) {\n    return <Route {...rest}>{children}</Route>;\n  }\n  return <Redirect to={`${ROUTES.LOGIN}`} />;\n};\n","import React from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { Header, Profile } from '../../components';\nimport { Create } from '../../components/create';\nimport { ExploreSuggestions } from '../../components/exploreSuggestions';\nimport { Home } from '../../components/home';\nimport { PostModal } from '../../components/post/PostModal';\nimport { PostWrapper } from '../../components/post/PostWrapper';\nimport { PrivateRoute } from '../../components/privateRoute';\nimport { ROUTES } from '../../constants/routes';\nimport s from './style.module.scss';\nimport { Location } from 'history';\n\nconst Dashboard = () => {\n  const location = useLocation<{ background: Location<unknown> | null }>();\n\n  const background = location.state?.background;\n\n  React.useEffect(() => {\n    document.title = 'MyPhotos';\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <main className={s.container}>\n        <Switch location={background || location}>\n          <PrivateRoute exact path={`${ROUTES.DASHBOARD}`}>\n            <Home />\n          </PrivateRoute>\n          <PrivateRoute exact path={`${ROUTES.EXPLORE_SUGGESTIONS}`}>\n            <ExploreSuggestions />\n          </PrivateRoute>\n          <PrivateRoute exact path={`${ROUTES.CREATE}`}>\n            <Create />\n          </PrivateRoute>\n          <Route exact path={`${ROUTES.PROFILE}`}>\n            <Profile />\n          </Route>\n          <Route exact path={`${ROUTES.POST}`}>\n            <PostWrapper />\n          </Route>\n        </Switch>\n        {background && (\n          <Route exact path={`${ROUTES.POST}`}>\n            <PostModal />\n          </Route>\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}